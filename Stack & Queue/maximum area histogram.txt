#include <bits/stdc++.h>

using namespace std;



vector<int> NSR(int a[], int n, vector<int> &right)
{
    stack<pair<int,int> > sr;
    for(int i=n-1;i>=0;i--){
        if(sr.size()==0)
            right.push_back(n);

        else if(sr.size()>0 && sr.top().first<a[i])
            right.push_back(sr.top().second);

        else if(sr.size()>0 && sr.top().first>a[i])
        {
            while(sr.size()>0 && sr.top().first>=a[i])
                sr.pop();

            if(sr.size()==0)
                right.push_back(n);
            else
                right.push_back(sr.top().second);
        }

        sr.push({a[i],i});

    }

    reverse(right.begin(),right.end());
    return right;
}

vector<int> NSL(int a[], int n, vector<int> &left)
{
    stack<pair<int,int> > sl;
    for(int i=0;i<n;i++){
        if(sl.size()==0)
            left.push_back(-1);

        else if(sl.size()>0 && sl.top().first<a[i])
            left.push_back(sl.top().second);

        else if(sl.size()>0 && sl.top().first>a[i])
        {
            while(sl.size()>0 && sl.top().first>=a[i])
                sl.pop();

            if(sl.size()==0)
                left.push_back(-1);
            else
                left.push_back(sl.top().second);
        }

        sl.push({a[i],i});

    }

    return left;
}

int max_area(vector<int> &left, vector<int> &right)
{

}

int main()
{
    int a[]={6,2,5,4,5,1,6};
    int n=7;

    vector<int> right;
    vector<int> left;
    NSR(a,n,right);
    NSL(a,n,left);

    int area[n];

    for(int i=0;i<n;i++)
        area[i]=(a[i]*(right[i]-left[i]-1));

    int m=INT_MIN;
    for(int i=0;i<n;i++)
        m=max(m,area[i]);

    cout<<m;

    return 0;
}
