int Solution::solve(int A, int B) {
    vector<vector<int>> dp(A+1,vector<int>(B+1,0));

for(int i=1;i<=B;i++)
    dp[1][i]=i;

for(int i=1;i<=A;i++)
{
    dp[i][1]=1;
}
int low=0,high=0;
for(int i=2;i<=A;i++)
{
    for(int j=2;j<=B;j++)
    {
        int low = 1;
        int high = j;
        while(low<=high){
            int mid = (low+high)/2;
            if(dp[i-1][mid-1]<dp[i][j-mid]) low = mid+1;
            else high = mid-1;
        }
        int option1 = max(dp[i-1][low-1],dp[i][j-low]);
        int option2 = max(dp[i-1][high-1],dp[i][j-high]);
        dp[i][j] = 1 + min(option1,option2);
    }
}
return dp[A][B];
}
